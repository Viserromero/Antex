guitoggle = false
UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
-- Dont know who made this drag function but whoever did credit to them
function drag(Frame)
    dragToggle = nil
    local dragSpeed = 0
    dragInput = nil
    dragStart = nil
    local dragPos = nil
    function updateInput(input)
        local Delta = input.Position - dragStart
        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        game:GetService("TweenService"):Create(Frame, TweenInfo.new(dragSpeed), {Position = Position}):Play()
    end
    Frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end
    end)
end

local library = {}

function library:CreateMain(text)
	local UI = Instance.new("ScreenGui")
	local Main = Instance.new("ImageLabel")
	local Sidebar = Instance.new("ImageLabel")
	local Theme = Instance.new("ImageButton")
	local Title = Instance.new("TextLabel")
	local TabHolder = Instance.new("ImageLabel")
	local UIListLayout = Instance.new("UIListLayout")
	local Containers = Instance.new("Folder")
	
	UI.Name = "UI"
	UI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
	Main.Name = "Main"
	Main.Parent = UI
	Main.Active = true
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Main.BackgroundTransparency = 1.000
	Main.ClipsDescendants = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Selectable = true
	Main.Size = UDim2.new(0, 552, 0, 358)
	Main.Image = "rbxassetid://2790389767"
	Main.ImageColor3 = Color3.fromRGB(35, 35, 35)
	Main.ScaleType = Enum.ScaleType.Slice
	Main.SliceCenter = Rect.new(8, 8, 248, 248)
	drag(Main)
	
	Sidebar.Name = "Sidebar"
	Sidebar.Parent = Main
	Sidebar.Active = true
	Sidebar.AnchorPoint = Vector2.new(0.5, 0.5)
	Sidebar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Sidebar.BackgroundTransparency = 1.000
	Sidebar.ClipsDescendants = true
	Sidebar.Position = UDim2.new(0.119593635, 0, 0.499319762, 0)
	Sidebar.Selectable = true
	Sidebar.Size = UDim2.new(0, 133, 0, 358)
	Sidebar.Image = "rbxassetid://2790389767"
	Sidebar.ImageColor3 = Color3.fromRGB(53, 53, 53)
	Sidebar.ScaleType = Enum.ScaleType.Slice
	Sidebar.SliceCenter = Rect.new(8, 8, 248, 248)
	
	Theme.Name = "Theme"
	Theme.Parent = Sidebar
	Theme.BackgroundTransparency = 1.000
	Theme.LayoutOrder = 10
	Theme.Position = UDim2.new(0.0554945171, 0, 0.910988629, 0)
	Theme.Rotation = 150.000
	Theme.Size = UDim2.new(0, 25, 0, 25)
	Theme.ZIndex = 2
	Theme.Image = "rbxassetid://3926307971"
	Theme.ImageRectOffset = Vector2.new(684, 84)
	Theme.ImageRectSize = Vector2.new(36, 36)
	
	Title.Name = "Title"
	Title.Parent = Sidebar
	Title.AnchorPoint = Vector2.new(0.5, 0)
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.5, 0, 0.0279329605, 0)
	Title.Size = UDim2.new(0, 117, 0, 50)
	Title.ZIndex = 2
	Title.Font = Enum.Font.GothamBold
	Title.Text = text
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 22.000
	
	TabHolder.Name = "TabHolder"
	TabHolder.Parent = Sidebar
	TabHolder.Active = true
	TabHolder.AnchorPoint = Vector2.new(0.5, 0.5)
	TabHolder.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	TabHolder.BackgroundTransparency = 1.000
	TabHolder.ClipsDescendants = true
	TabHolder.Position = UDim2.new(0.49983111, 0, 0.519553065, 0)
	TabHolder.Selectable = true
	TabHolder.Size = UDim2.new(0, 112, 0, 266)
	TabHolder.Image = "rbxassetid://2790389767"
	TabHolder.ImageColor3 = Color3.fromRGB(53, 53, 53)
	TabHolder.ScaleType = Enum.ScaleType.Slice
	TabHolder.SliceCenter = Rect.new(8, 8, 248, 248)
	TabHolder.ImageTransparency = 1
	
	UIListLayout.Parent = TabHolder
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 8)
	
	Containers.Name = "Containers"
	Containers.Parent = Main
	
	local TweenService = game:GetService("TweenService")
	local Frame = script.Parent
	local function Tween(Object, Length, Style, Direction, Properties)
		local Tween = TweenService:Create(
			Object,
			TweenInfo.new(Length, Enum.EasingStyle[Style].Value, Enum.EasingDirection[Direction].Value),
			Properties
		)
		
		Tween:Play()
		Tween:Destroy()
	end
	
	Theme.MouseButton1Click:Connect(function()
		if Main.ImageColor3 == Color3.fromRGB(35, 35, 35) then
			Tween(Main, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(235, 235, 235) })
			Tween(Sidebar, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(255, 255, 255) })
			Tween(Theme, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(35,35,35) })
			Tween(Title, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(35,35,35) })
		else	
			Tween(Main, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(35, 35, 35) })
			Tween(Sidebar, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(53, 53, 53) })
			Tween(Theme, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(255, 255, 255) })
			Tween(Title, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(255, 255, 255) })
		end
	end)
	
	local inlib = {}
	function inlib:CreateTab(text)
		local Tab = Instance.new("ImageButton")
		local TextLabel = Instance.new("TextLabel")
		local Container1 = Instance.new("ScrollingFrame")
		local UIListLayout_2 = Instance.new("UIListLayout")
		
		Tab.Name = "Tab"
		Tab.Parent = TabHolder
		Tab.AnchorPoint = Vector2.new(0.5, 1)
		Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tab.BackgroundTransparency = 1.000
		Tab.Position = UDim2.new(0.499774873, 0, 0.238331884, 0)
		Tab.Size = UDim2.new(0, 112, 0, 26)
		Tab.ZIndex = 2
		Tab.Image = "rbxassetid://2790382281"
		Tab.ImageColor3 = Color3.fromRGB(35, 35, 35)
		Tab.ScaleType = Enum.ScaleType.Slice
		Tab.SliceCenter = Rect.new(4, 4, 252, 252)
		
		TextLabel.Parent = Tab
		TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderSizePixel = 0
		TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextLabel.Size = UDim2.new(1, -5, 1, -5)
		TextLabel.Font = Enum.Font.GothamSemibold
		TextLabel.Text = text
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextSize = 16.000
		
		Container1.Name = text.." Container"
		Container1.Parent = Containers
		Container1.Active = true
		Container1.AnchorPoint = Vector2.new(1, 0.5)
		Container1.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Container1.BackgroundTransparency = 1.000
		Container1.ClipsDescendants = false
		Container1.Position = UDim2.new(0.961956501, 0, 0.5, 0)
		Container1.Size = UDim2.new(0, 378, 0, 335)
		Container1.Visible = false
		Container1.ScrollBarImageTransparency = 1
		
		UIListLayout_2.Parent = Container1
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_2.Padding = UDim.new(0, 8)
		
		local TweenService = game:GetService("TweenService")
		local Frame = script.Parent
		local function Tween(Object, Length, Style, Direction, Properties)
			local Tween = TweenService:Create(
				Object,
				TweenInfo.new(Length, Enum.EasingStyle[Style].Value, Enum.EasingDirection[Direction].Value),
				Properties
			)
			
			Tween:Play()
			Tween:Destroy()
		end
		
		Theme.MouseButton1Click:Connect(function()
			if Main.ImageColor3 == Color3.fromRGB(35, 35, 35) then
				Tween(Tab, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(235, 235, 235) })
				Tween(TextLabel, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(35,35,35) })
			else	
				Tween(Tab, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(35, 35, 35) })
				Tween(TextLabel, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(255, 255, 255) })
			end
		end)
		
		Tab.MouseButton1Click:Connect(function()
			for i,v in pairs(Containers:GetChildren()) do
		    	v.Visible = false
		    end 
			Container1.Visible = true
			print(Container1.Name)
		end)
		function inlib:CreateButton(text,callback)
			local callback = callback or function() end
			
			local Button = Instance.new("ImageButton")
			local ButtonLabel = Instance.new("TextLabel")
				
			Button.Name = "Button"
			Button.Parent = Container1
			Button.AnchorPoint = Vector2.new(0.5, 0)
			Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Button.BackgroundTransparency = 1.000
			Button.Position = UDim2.new(0.5, 0, 0.14804469, 0)
			Button.Size = UDim2.new(0, 378, 0, 24)
			Button.ZIndex = 2
			Button.Image = "rbxassetid://2790382281"
			Button.ImageColor3 = Color3.fromRGB(53, 53, 53)
			Button.ScaleType = Enum.ScaleType.Slice
			Button.SliceCenter = Rect.new(4, 4, 252, 252)
				
			ButtonLabel.Name = "ButtonLabel"
			ButtonLabel.Parent = Button
			ButtonLabel.AnchorPoint = Vector2.new(0.5, 0.5)
			ButtonLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ButtonLabel.BackgroundTransparency = 1.000
			ButtonLabel.BorderSizePixel = 0
			ButtonLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
			ButtonLabel.Size = UDim2.new(1, -5, 1, -5)
			ButtonLabel.Font = Enum.Font.GothamSemibold
			ButtonLabel.Text = text
			ButtonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonLabel.TextSize = 16.000
			
			local TweenService = game:GetService("TweenService")
			local Frame = script.Parent
			local function Tween(Object, Length, Style, Direction, Properties)
				local Tween = TweenService:Create(
					Object,
					TweenInfo.new(Length, Enum.EasingStyle[Style].Value, Enum.EasingDirection[Direction].Value),
					Properties
				)
				
				Tween:Play()
				Tween:Destroy()
			end
			
			Theme.MouseButton1Click:Connect(function()
				if Main.ImageColor3 == Color3.fromRGB(35, 35, 35) then
					Tween(Button, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(255, 255, 255) })
					Tween(ButtonLabel, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(35,35,35) })
				else	
					Tween(Button, 0.6, "Linear", "Out", { ImageColor3 = Color3.fromRGB(53, 53, 53) })
					Tween(ButtonLabel, 0.6, "Linear", "Out", { TextColor3 = Color3.fromRGB(255, 255, 255) })
				end
			end)
			Button.MouseButton1Click:Connect(function()
				pcall(callback)
			end)
		end
	end
	return inlib
end
return library
